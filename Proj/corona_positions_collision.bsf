/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 2017  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Intel and sold by Intel or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 16 16 304 224)
	(text "corona_positions_collision" (rect 5 0 105 12)(font "Arial" ))
	(text "inst" (rect 8 192 20 204)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "clk" (rect 0 0 10 12)(font "Arial" ))
		(text "clk" (rect 21 27 31 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 1))
	)
	(port
		(pt 0 48)
		(input)
		(text "resetN" (rect 0 0 27 12)(font "Arial" ))
		(text "resetN" (rect 21 43 48 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 1))
	)
	(port
		(pt 0 64)
		(input)
		(text "collision" (rect 0 0 28 12)(font "Arial" ))
		(text "collision" (rect 21 59 49 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64)(line_width 1))
	)
	(port
		(pt 0 80)
		(input)
		(text "collision_clamp_corona[0..3]" (rect 0 0 110 12)(font "Arial" ))
		(text "collision_clamp_corona[0..3]" (rect 21 75 131 87)(font "Arial" ))
		(line (pt 0 80)(pt 16 80)(line_width 3))
	)
	(port
		(pt 0 96)
		(input)
		(text "randX[10..0]" (rect 0 0 47 12)(font "Arial" ))
		(text "randX[10..0]" (rect 21 91 68 103)(font "Arial" ))
		(line (pt 0 96)(pt 16 96)(line_width 3))
	)
	(port
		(pt 0 112)
		(input)
		(text "randY[10..0]" (rect 0 0 48 12)(font "Arial" ))
		(text "randY[10..0]" (rect 21 107 69 119)(font "Arial" ))
		(line (pt 0 112)(pt 16 112)(line_width 3))
	)
	(port
		(pt 0 128)
		(input)
		(text "rand_draw_request[0..9]" (rect 0 0 97 12)(font "Arial" ))
		(text "rand_draw_request[0..9]" (rect 21 123 118 135)(font "Arial" ))
		(line (pt 0 128)(pt 16 128)(line_width 3))
	)
	(port
		(pt 0 144)
		(input)
		(text "IsInCircularMovement" (rect 0 0 88 12)(font "Arial" ))
		(text "IsInCircularMovement" (rect 21 139 109 151)(font "Arial" ))
		(line (pt 0 144)(pt 16 144)(line_width 1))
	)
	(port
		(pt 0 160)
		(input)
		(text "EndOfPhase1" (rect 0 0 55 12)(font "Arial" ))
		(text "EndOfPhase1" (rect 21 155 76 167)(font "Arial" ))
		(line (pt 0 160)(pt 16 160)(line_width 1))
	)
	(port
		(pt 288 32)
		(output)
		(text "topLeftX[0..9][10..0]" (rect 0 0 77 12)(font "Arial" ))
		(text "topLeftX[0..9][10..0]" (rect 190 27 267 39)(font "Arial" ))
		(line (pt 288 32)(pt 272 32)(line_width 3))
	)
	(port
		(pt 288 48)
		(output)
		(text "topLeftY[0..9][10..0]" (rect 0 0 79 12)(font "Arial" ))
		(text "topLeftY[0..9][10..0]" (rect 188 43 267 55)(font "Arial" ))
		(line (pt 288 48)(pt 272 48)(line_width 3))
	)
	(port
		(pt 288 64)
		(output)
		(text "Draw_request[0..9]" (rect 0 0 76 12)(font "Arial" ))
		(text "Draw_request[0..9]" (rect 191 59 267 71)(font "Arial" ))
		(line (pt 288 64)(pt 272 64)(line_width 3))
	)
	(drawing
		(rectangle (rect 16 16 272 192)(line_width 1))
	)
)
